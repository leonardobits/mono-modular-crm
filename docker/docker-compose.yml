version: '3.8'

services:
  db:
    image: supabase/postgres:15.1.0.118
    restart: unless-stopped
    volumes:
      - ./supabase/db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=\
      - POSTGRES_PASSWORD=\
      - POSTGRES_DB=\
    networks:
      - supabase_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    image: supabase/gotrue:v2.128.1
    restart: unless-stopped
    depends_on:
      db: { condition: service_healthy }
    environment:
      - GOTRUE_OPERATOR_TOKEN=\
      - GOTRUE_DATABASE_URL=postgres://\:\@db:5432/\
      - GOTRUE_JWT_SECRET=\
      - GOTRUE_SITE_URL=\
      - GOTRUE_SMTP_HOST=mailhog
      - GOTRUE_SMTP_PORT=1025
    networks:
      - supabase_network

  rest:
    image: postgrest/postgrest:v11.2.2
    restart: unless-stopped
    depends_on:
      db: { condition: service_healthy }
    environment:
      - PGRST_DB_URI=postgres://\:\@db:5432/\
      - PGRST_DB_SCHEMAS=public,storage
      - PGRST_DB_ANON_ROLE=\
      - PGRST_JWT_SECRET=\
    networks:
      - supabase_network

  studio:
    image: supabase/studio:20240112
    restart: unless-stopped
    ports: [ "54321:54321" ]
    environment:
      - SUPABASE_URL=http://localhost:8000
      - SUPABASE_ANON_KEY=\
      - SUPABASE_SERVICE_ROLE_KEY=\
      - SUPABASE_DB_HOST=db
      - SUPABASE_DB_USER=\
      - SUPABASE_DB_PASSWORD=\
    networks:
      - supabase_network

  mailhog:
    image: mailhog/mailhog
    ports: [ "8025:8025" ]
    networks:
      - supabase_network

  backend:
    build:
      context: ..
      dockerfile: Dockerfile
      target: backend
    ports: [ "3001:3001" ]
    env_file: [ .env ]
    depends_on:
      db: { condition: service_healthy }
    networks:
      - supabase_network

  frontend:
    build:
      context: ..
      dockerfile: Dockerfile
      target: frontend
    ports: [ "3000:3000" ]
    env_file: [ .env ]
    depends_on: [ backend ]
    networks:
      - supabase_network

networks:
  supabase_network:
    driver: bridge
